const WebSocket = require("ws");

const wss = new WebSocket.Server({ port: 8080 });
let players = [];
let admin = null;
const words = [
  "whale",
  "grass",
  "tree",
  "lion",
  "pigeon",
  "dice",
  "ocean",
  "mountain",
  "river",
  "forest",
  "desert",
  "robot",
  "dragon",
  "castle",
  "pirate",
  "wizard",
  "knight",
  "sword",
  "shield",
  "moon",
  "planet",
  "star",
  "galaxy",
  "universe",
  "comet",
  "asteroid",
  "meteor",
  "volcano",
  "earthquake",
  "tsunami",
  "hurricane",
  "storm",
  "lightning",
  "thunder",
  "rainbow",
  "cloud",
  "sunshine",
  "eclipse",
  "tornado",
  "avalanche",
  "bridge",
  "skyscraper",
  "stadium",
  "library",
  "museum",
  "university",
  "school",
  "hospital",
  "airport",
  "station",
  "subway",
  "bus",
  "train",
  "car",
  "bicycle",
  "motorcycle",
  "airplane",
  "helicopter",
  "boat",
  "ship",
  "submarine",
  "rocket",
  "satellite",
  "spaceship",
  "astronaut",
  "alien",
  "robot",
  "computer",
  "smartphone",
  "tablet",
  "television",
  "camera",
  "radio",
  "microphone",
  "speaker",
  "headphones",
  "guitar",
  "piano",
  "violin",
  "drum",
  "flute",
  "trumpet",
  "saxophone",
  "accordion",
  "harmonica",
  "banjo",
  "cello",
  "harp",
  "trombone",
  "xylophone",
  "chimpanzee",
  "elephant",
  "tiger",
  "giraffe",
  "zebra",
  "kangaroo",
  "panda",
  "rhinoceros",
  "hippopotamus",
  "crocodile",
  "alligator",
  "dolphin",
  "shark",
  "octopus",
  "crab",
  "lobster",
  "jellyfish",
  "seahorse",
  "whale",
  "penguin",
  "ostrich",
  "flamingo",
  "peacock",
  "parrot",
  "eagle",
  "falcon",
  "owl",
  "bat",
  "butterfly",
  "bee",
  "ant",
  "spider",
  "scorpion",
  "snake",
  "lizard",
  "turtle",
  "frog",
  "toad",
  "salamander",
  "newt",
  "dinosaur",
  "mammoth",
  "saber-tooth",
  "phoenix",
  "griffin",
  "unicorn",
  "dragon",
  "mermaid",
  "vampire",
  "zombie",
  "werewolf",
  "ghost",
  "witch",
  "fairy",
  "goblin",
  "troll",
  "ogre",
  "elf",
  "dwarf",
  "giant",
  "sphinx",
  "minotaur",
  "centaur",
  "chimera",
  "hydra",
  "kraken",
  "yeti",
  "sasquatch",
  "chupacabra",
  "bigfoot",
  "medusa",
  "cyclops",
  "gorgon",
  "basilisk",
  "cerberus",
  "manticore",
  "wyvern",
  "hippogriff",
  "banshee",
  "djinn",
  "genie",
  "lemur",
  "sloth",
  "mole",
  "porcupine",
  "beaver",
  "otter",
  "raccoon",
  "skunk",
  "badger",
  "mongoose",
  "weasel",
  "ferret",
  "meerkat",
  "aardvark",
  "armadillo",
  "platypus",
  "wombat",
  "koala",
  "quokka",
  "kookaburra",
  "kiwi",
  "moose",
  "caribou",
  "reindeer",
  "bison",
  "buffalo",
  "yak",
  "ibex",
  "gazelle",
  "antelope",
  "impala",
  "kudu",
  "oryx",
  "springbok",
  "wildebeest",
  "gnu",
  "hyena",
  "jackal",
  "coyote",
  "wolf",
  "fox",
  "lynx",
  "bobcat",
  "puma",
  "leopard",
  "cheetah",
  "jaguar",
  "panther",
  "cougar",
  "apple",
  "ball",
  "cat",
  "dog",
  "egg",
  "fish",
  "grape",
  "hat",
  "ice",
  "jacket",
  "kite",
  "lamp",
  "moon",
  "nose",
  "orange",
  "pen",
  "quilt",
  "rose",
  "star",
  "tree",
  "umbrella",
  "van",
  "water",
  "xylophone",
  "yarn",
  "zebra",
  "airplane",
  "book",
  "car",
  "door",
  "elephant",
  "flame",
  "glove",
  "house",
  "island",
  "juice",
  "key",
  "leaf",
  "milk",
  "nest",
  "owl",
  "pizza",
  "queen",
  "rabbit",
  "sun",
  "towel",
  "unicorn",
  "vase",
  "wind",
  "x-ray",
  "yogurt",
  "zoo",
  "bag",
  "cake",
  "duck",
  "envelope",
  "fan",
  "grill",
  "hat",
  "icecream",
  "jar",
  "kangaroo",
  "lemon",
  "mouse",
  "notebook",
  "orange",
  "pencil",
  "queen",
  "rock",
  "shoe",
  "train",
  "umbrella",
  "vampire",
  "whale",
  "xylophone",
  "yarn",
  "zebra",
  "airport",
  "bottle",
  "chair",
  "doll",
  "eggplant",
  "flower",
  "grapes",
  "hammer",
  "insect",
  "jelly",
  "koala",
  "lemonade",
  "mango",
  "notebook",
  "octopus",
  "penguin",
  "quiche",
  "robot",
  "squirrel",
  "tiger",
  "ukulele",
  "volcano",
  "whistle",
  "xylophone",
  "yawn",
  "zebra",
  "accordion",
  "beach",
  "cactus",
  "dolphin",
  "eagle",
  "furniture",
  "guitar",
  "honey",
  "iceberg",
  "juice",
  "kiwi",
  "lighthouse",
  "mouse",
  "ninja",
  "olive",
  "pillow",
  "quail",
  "rose",
  "sandwich",
  "trophy",
  "underwear",
  "vulture",
  "waterfall",
  "xylophone",
  "yogurt",
  "zoo",
  "apricot",
  "balloon",
  "caterpillar",
  "donut",
  "elevator",
  "football",
  "grapefruit",
  "haystack",
  "internet",
  "jacket",
  "kitchen",
  "lemon",
  "mushroom",
  "necklace",
  "octopus",
  "plankton",
  "quiver",
  "rain",
  "scarf",
  "television",
  "umbrella",
  "vortex",
  "whale",
  "xylophone",
  "yellow",
  "zebra",
  "airplane",
  "bicycle",
  "cactus",
  "deck",
  "engine",
  "fish",
  "glasses",
  "hatch",
  "iceberg",
  "jug",
  "keyboard",
  "laptop",
  "monkey",
  "noodles",
  "orange",
  "paint",
  "quill",
  "robot",
  "snowman",
  "train",
  "umbrella",
  "vase",
  "water",
  "xylophone",
  "yacht",
  "zebra",
  "ant",
  "banana",
  "coconut",
  "dog",
  "egg",
  "flower",
  "guitar",
  "house",
  "ice",
  "jelly",
  "kite",
  "lamp",
  "milk",
  "notebook",
  "ocean",
  "pen",
  "quilt",
  "rose",
  "sock",
  "tree",
  "umbrella",
  "van",
  "wagon",
  "xylophone",
  "yarn",
  "zebra",
  "apron",
  "bottle",
  "camera",
  "dinosaur",
  "envelope",
  "fence",
  "grape",
  "helmet",
  "ink",
  "jug",
  "kite",
  "lemon",
  "magnet",
  "nut",
  "orange",
  "pencil",
  "quilt",
  "raccoon",
  "socks",
  "telescope",
  "ufo",
  "vulture",
  "whale",
  "xylophone",
  "yawn",
  "zebra",
  "alarm",
  "baker",
  "couch",
  "dragon",
  "elephant",
  "flask",
  "giraffe",
  "hotel",
  "icecream",
  "juice",
  "knight",
  "light",
  "mountain",
  "nail",
  "octopus",
  "pet",
  "quilt",
  "robot",
  "soda",
  "teapot",
  "umbrella",
  "vase",
  "water",
  "xylophone",
  "yogurt",
  "zebra",
  "anchor",
  "bacon",
  "candle",
  "desk",
  "eggplant",
  "feather",
  "gorilla",
  "honey",
  "ice",
  "jelly",
  "king",
  "lemon",
  "match",
  "night",
  "ocean",
  "puzzle",
  "quail",
  "rose",
  "sailboat",
  "tiger",
  "ufo",
  "vanilla",
  "walnut",
  "xylophone",
  "yarn",
  "zebra",
];  
// Function to broadcast player count and player list to all connected players
const updatePlayerData = () => {
  const message = JSON.stringify({
      type: 'playerData',
      count: players.length,
      players: players.map(player => ({ username: player.username, isAdmin: player.isAdmin }))
  });
  players.forEach(player => player.ws.send(message));
};

wss.on("connection", (ws) => {
  ws.on("message", (message) => {
      const data = JSON.parse(message);

      if (data.type === "join") {
          const player = { ws, isAdmin: false, username: data.username || 'Anonymous' };
          players.push(player);

          // Assign admin to the first player
          if (players.length === 1) {
              player.isAdmin = true;
              admin = player;
              ws.send(JSON.stringify({ type: "joined", isAdmin: true }));
          } else {
              ws.send(JSON.stringify({ type: "joined", isAdmin: false }));
          }

          // Update all players with the current player data
          updatePlayerData();
      }

      if (data.type === "start" && ws === admin.ws) {
          const imposterCount = parseInt(data.imposterCount, 10);
          const chosenWord = words[Math.floor(Math.random() * words.length)];
          const playersCount = players.length;

          // Validate imposter count
          if (imposterCount >= playersCount) {
              ws.send(JSON.stringify({ type: "error", message: "Imposter count is too high." }));
              return;
          }

          const imposters = new Set();

          while (imposters.size < imposterCount) {
              const imposterIndex = Math.floor(Math.random() * players.length);
              imposters.add(players[imposterIndex]);
          }

          // Create a list of imposter names
          const imposterNames = Array.from(imposters).map(player => player.username);

          // Send word and imposter information to players
          players.forEach(player => {
              if (imposters.has(player)) {
                  player.ws.send(
                      JSON.stringify({
                          type: "gameStart",
                          imposterNames: imposterNames.filter(name => name !== player.username), // Exclude the current imposter's name
                      })
                  );
              } else {
                  player.ws.send(
                      JSON.stringify({
                          type: "gameStart",
                          word: chosenWord,
                      })
                  );
              }
          });
      }
  });

  ws.on("close", () => {
      players = players.filter((player) => player.ws !== ws);

      // If the admin leaves, assign a new admin if players are still present
      if (ws === admin?.ws && players.length > 0) {
          admin = players[0];  // The next player becomes the admin
          admin.isAdmin = true;
          admin.ws.send(JSON.stringify({ type: "joined", isAdmin: true }));
      }

      // Update player data for all players
      updatePlayerData();
  });
});

console.log("Server Started on ws://localhost:8080");
